name: MLflow Model Training (Simple)

on:
  workflow_dispatch:
    inputs:
      debug_mode:
        description: 'Enable debug mode'
        required: false
        default: 'false'

jobs:
  simple-training:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies directly
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy scikit-learn mlflow matplotlib seaborn joblib
        
    - name: List files
      working-directory: ./MLProject
      run: |
        echo "üìÅ Files in MLProject directory:"
        ls -la
        echo ""
        echo "üìä Dataset preview:"
        head -5 avocado_ripeness_dataset_preprocessed.csv
        
    - name: Test Python imports
      working-directory: ./MLProject
      run: |
        python -c "
        import pandas as pd
        import numpy as np
        import sklearn
        import mlflow
        import matplotlib
        import seaborn
        import joblib
        print('‚úÖ All imports successful')
        print(f'pandas version: {pd.__version__}')
        print(f'sklearn version: {sklearn.__version__}')
        print(f'mlflow version: {mlflow.__version__}')
        "
        
    - name: Test data loading
      working-directory: ./MLProject
      run: |
        python -c "
        import pandas as pd
        data = pd.read_csv('avocado_ripeness_dataset_preprocessed.csv')
        print(f'‚úÖ Dataset loaded successfully')
        print(f'Shape: {data.shape}')
        print(f'Columns: {list(data.columns)}')
        print(f'Target classes: {data.ripeness.unique()}')
        "
        
    - name: Run simple training
      working-directory: ./MLProject
      run: |
        python modelling.py --n_estimators 10 --max_depth 5
        
    - name: Check generated files
      working-directory: ./MLProject
      run: |
        echo "üìÅ Generated files:"
        ls -la *.png *.joblib 2>/dev/null || echo "No artifacts found"
        
        if [ -f "confusion_matrix.png" ]; then
          echo "‚úÖ Confusion matrix generated"
        else
          echo "‚ùå Confusion matrix not found"
        fi
        
        if [ -f "random_forest_model.joblib" ]; then
          echo "‚úÖ Model file generated"
        else
          echo "‚ùå Model file not found"
        fi
        
    - name: Upload artifacts (if any)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: simple-training-artifacts
        path: |
          MLProject/*.png
          MLProject/*.joblib
        retention-days: 7
